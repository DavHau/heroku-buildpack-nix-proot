#!/usr/bin/env bash

set -eo pipefail
set -o errtrace
set -o nounset

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

source $DIR/script-common

BUILD_DIR=$1

test -d /nix # fail here if /nix doesn't exist

# pass build dir to subsidiary scripts
export BUILD_DIR
export HOME=$NIX_MNT

suppress_locale_warnings

install_nix

source $HOME/.nix-profile/etc/profile.d/nix.sh

export PATH=$HOME/.nix-profile/bin:$PATH

# set $nix to the hash of the nix version in store
eval $(grep nix= ./install | head -n 1)

export nix

topic "Attempting to install shell.nix"
SRC=$(nix-store --add-fixed sha256 --recursive $BUILD_DIR/git-export)
echo $SRC
cat $(nix-instantiate $SRC/shell.nix)
nix-env --install -f $SRC/shell.nix --option binary-caches $NIX_EXTRA_BINARY_CACHE
nix-collect-garbage -d

topic "Creating symbolic link to /nix in BUILD_DIR"
ln -s /nix/var/nix/profiles/default $BUILD_DIR/.nix-profile

topic "Creating .profile.d"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF > $BUILD_DIR/.profile.d/000_nix.sh
export NIX_VERSION_FULL=$NIX_VERSION_FULL
export nix=$nix
export PATH=$REAL_APP_DIR/.nix-profile/bin:$REAL_APP_DIR/bin:\$PATH
EOF

topic "Creating run_in_proot.sh"
cat <<EOF > $BUILD_DIR/bin/run_in_proot.sh
#!/bin/bash

set -e
test -d /nix && test -d $REAL_APP_DIR/.nix-profile
source $REAL_APP_DIR/.nix-profile/etc/profile.d/nix.sh

CMD=\$1
\$CMD "\${@:2}"
EOF

chmod u+x $BUILD_DIR/bin/run_in_proot.sh

topic "Creating run_proot.sh"
APP_NIX_ROOT_PATH=$REAL_APP_DIR/nix-mnt/$NIX_VERSION_FULL
cat <<EOF > $BUILD_DIR/bin/run_proot.sh
#!/usr/bin/env bash

$REAL_APP_DIR/bin/proot -b $APP_NIX_ROOT_PATH:/nix bash $REAL_APP_DIR/bin/run_in_proot.sh "\$@"
EOF

chmod u+x $BUILD_DIR/bin/run_proot.sh
